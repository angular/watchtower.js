{"version":3,"file":"change_detection.js","sources":["@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/8","change_detection.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["define($__placeholder__0, $__placeholder__1);","function($__placeholder__0) {\n      $__placeholder__1\n    }","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","/**\n * Stub implementations of the change detection API.\n * All of these throws can likely be removed at a later date, depending on the behaviour of the\n * Traceur compiler, and the changing ES6 spec.\n *\n * At the moment, Trait types are not being used as they are not in the current Harmony draft.\n * Unfortunately, this makes the composition of multiple classes, which is found in Angular.dart's\n * implementation, rather difficult. This will be improved upon in the future, however will quite\n * likely involve breaking changes.\n *\n * TODO:\n * Most of the getter/setter routines are unnecessary and likely cause performance hits. I'll\n * need to measure, but I don't think there is much benefit for these. For simplicity, some have\n * been commented out for the time being.\n */\nexport class ChangeDetectorGroup {\n  watch(context, field, handler) { throw \"watch() not implemented\"; }\n\n  remove() { throw \"remove() not implemented\"; }\n\n  newGroup() { throw \"newGroup() not implemented\"; }\n}\n\nexport class ChangeDetector extends ChangeDetectorGroup {\n  collectChanges(exceptionHandler, stopWatch) { throw \"collectChanges() not implemented\"; }\n}\n\nclass Record {\n  get object() { throw \"get object() not implemented\"; }\n\n  get field() { throw \"get field() not implemented\"; }\n\n  //get handler() { throw \"get handler() not implemented\"; }\n\n  //get currentValue() { throw \"get currentValue() not implemented\"; }\n\n  //get previousValue() { throw \"get previousValue() not implemented\"; }\n}\n\nexport class ChangeRecord extends Record {\n  //get nextChange() { throw \"get nextChange() not implemented\"; }\n}\n\n// I'm not sure that there is any area in the code in which a WatchRecord is used\n// where a ChangeRecord isn't --- But we don't have strong typing in JS, so we\n// can probably make this work regardless\nexport class WatchRecord extends ChangeRecord {\n  get object() { throw \"get object() not implemented\"; }\n  set object(value) { throw \"set object() not implemented\"; }\n\n  check() { throw \"check() not implemented\"; }\n\n  remove() { throw \"remove() not implemented\"; }\n}\n\n/**\n * TODO: refactor this, the crazy amount of types is not super helpful.\n */\nexport class MapChangeRecord {\n  get map() { throw \"get map() not implemented\"; }\n\n  get mapHead() { throw \"get mapHead() not implemented\"; }\n\n  get changesHead() { throw \"get changesHead() not implemented\"; }\n\n  get additionsHead() { throw \"get additionsHead() not implemented\"; }\n\n  get removalsHead() { throw \"get removalsHead() not implemented\"; }\n\n  forEachChange(fn) { throw \"forEachChange() not implemented\"; }\n\n  forEachAddition(fn) { throw \"forEachAddition() not implemented\"; }\n\n  forEachRemoval(fn) { throw \"forEachRemoval() not implemented\"; }\n}\n\nexport class MapKeyValue {\n  get key() { throw \"get key() not implemented\"; }\n  get previousValue() { throw \"get previousValue() not implemented\"; }\n  get currentValue() { throw \"get currentValue() not implemented\"; }\n  get nextKeyValue() { throw \"get nextKeyValue() not implemented\"; }\n  get nextAddedKeyValue() { throw \"get nextAddedKeyValue() not implemented\"; }\n  get nextRemovedKeyValue() { throw \"get nextRemovedKeyValue() not implemented\"; }\n  get nextChangedKeyValue() { throw \"get nextChangedKeyValue() not implemented\"; }\n}\n\nexport class CollectionChangeRecord {\n  get iterable() { throw \"get iterable() not implemented\"; }\n\n  get collectionHead() { throw \"get collectionHead() not implemented\"; }\n\n  get additionsHead() { throw \"get additionsHead() not implemented\"; }\n\n  get movesHead() { throw \"get movesHead() not implemented\"; }\n\n  get removalsHead() { throw \"get removalsHead() not implemented\"; }\n\n  forEachAddition(fn) { throw \"forEachAddition() not implemented\"; }\n\n  forEachMove(fn) { throw \"forEachMove() not implemented\"; }\n\n  forEachRemoval(fn) { throw \"forEachRemoval() not implemented\"; }\n}\n\nexport class CollectionChangeItem {\n  //get previousIndex() { throw \"get previousIndex() not implemented\"; }\n\n  //get currentIndex() { throw \"get currentIndex() not implemented\"; }\n\n  //get item() { throw \"get item() not implemented\"; }\n\n  get nextCollectionItem() { throw \"get nextCollectionItem() not implemented\"; }\n\n  get nextAddedItem() { throw \"get nextAddedItem() not implemented\"; }\n\n  get nextRemovedItem() { throw \"get nextRemovedItem() not implemented\"; }\n}\n","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}