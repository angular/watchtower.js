{"version":3,"file":"linked_list.js","sources":["@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/8","linked_list.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["define($__placeholder__0, $__placeholder__1);","function($__placeholder__0) {\n      $__placeholder__1\n    }","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","export class _LinkedListItem {\n  static _initialize(item) {\n    // TODO: Traceur assertions\n    // assert(typeof item._previous === \"undefined\");\n    // assert(typeof item._next === \"undefined\");\n    item._next = item._previous = null;\n  }\n}\n\nexport class _LinkedList {\n  static _initialize(list) {\n    // TODO: Traceur assertions\n    // assert(typeof list._head === \"undefined\");\n    // assert(typeof list._tail === \"undefined\");\n    list._tail = list._head = null;\n  }\n\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._next === null);\n    // assert(item._previous === null);\n    if (list._tail === null) {\n      list._head = list._tail = item;\n    } else {\n      item._previous = list._tail;\n      list._tail._next = item;\n      list._tail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._head === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._previous;\n    var next = item._next;\n\n    if (previous === null) list._head = next;\n    else previous._next = next;\n    if (next === null) list._tail = previous;\n    else next._previous = previous;\n  }\n}\n\nexport class _WatchList {\n  static _initialize(list) {\n    // TODO: Traceur assertions\n    // assert(typeof list._watchHead === \"undefined\");\n    // assert(typeof list._watchTail === \"undefined\");\n    list._watchHead = list._watchTail = null;\n  }\n\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._nextWatch === null);\n    // assert(item._previousWatch === null);\n    if (list._watchTail === null) {\n      list._watchHead = list._watchTail = item;\n    } else {\n      item._previousWatch = list._watchTail;\n      list._watchTail._nextWatch = item;\n      list._watchTail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._watchHead === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._previousWatch;\n    var next = item._nextWatch;\n    if (previous === null) list._watchHead = next;\n    else previous._nextWatch = next;\n    if (next === null) list._watchTail = previous;\n    else next._previousWatch = previous;\n  }\n}\n\nexport class _WatchGroupList {\n  static _add(list, item) {\n    // TODO(caitp): Traceur assertions\n    // assert(item._nextWatchGroup === null);\n    // assert(item._prevWatchGroup === null);\n    if (list._watchGroupTail === null) {\n      list._watchGroupHead = list._watchGroupTail = item;\n    } else {\n      item._prevWatchGroup = list._watchGroupTail;\n      list._watchGroupTail._nextWatchGroup = item;\n      list._watchGroupTail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._watchGroupHead === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._prevWatchGroup;\n    var next = item._nextWatchGroup;\n\n    if (previous === null) list._watchGroupHead = next;\n    else previous._nextWatchGroup = next;\n    if (next === null) list._watchGroupTail = previous;\n    else next._prevWatchGroup = previous;\n  }\n}\n\nexport class _ArgHandlerList {\n  static _initialize(list) {\n    list._argHandlerHead = list._argHandlerTail = null;\n  }\n\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._nextArgHandler === null);\n    // assert(item._previousArgHandler === null);\n    if (list._argHandlerTail === null) {\n      list._argHandlerHead = list._argHandlerTail = item;\n    } else {\n      item._previousArgHandler = list._argHandlerTail;\n      list._argHandlerTail._nextArgHandler = item;\n      list._argHandlerTail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._argHandlerHead === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._previousArgHandler;\n    var next = item._nextArgHandler;\n\n    if (previous === null) list._argHandlerHead = next;\n    else previous._nextArgHandler = next;\n    if (next === null) list._argHandlerTail = previous;\n    else next._previousArgHandler = previous;\n  }\n}\n\nexport class _EvalWatchList {\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._nextEvalWatch === null);\n    // assert(item._prevEvalWatch === null);\n    var prev = list._evalWatchTail;\n    var next = prev._nextEvalWatch;\n\n    if (prev === list._marker) {\n      list._evalWatchHead = list._evalWatchTail = item;\n      prev = prev._prevEvalWatch;\n      list._marker._prevEvalWatch = null;\n      list._marker._nextEvalWatch = null;\n    }\n    item._nextEvalWatch = next;\n    item._prevEvalWatch = prev;\n\n    if (prev !== null) prev._nextEvalWatch = item;\n    if (next !== null) next._prevEvalWatch = item;\n\n    return (list._evalWatchTail = item);\n  }\n\n  static _isEmpty(list) {\n    return list._evalWatchHead === null;\n  }\n\n  static _remove(list, item) {\n    // TODO: Traceur assertions\n    // assert(item.watchGrp === list);\n    var prev = item._prevEvalWatch;\n    var next = item._nextEvalWatch;\n\n    if (list._evalWatchHead === list._evalWatchTail) {\n      list._evalWatchHead = list._evalWatchTail = list._marker;\n      list._marker._nextEvalWatch = next;\n      list._marker._prevEvalWatch = prev;\n      if (prev !== null) prev._nextEvalWatch = list._marker;\n      if (next !== null) next._prevEvalWatch = list._marker;\n    } else {\n      if (item === list._evalWatchHead) list._evalWatchHead = next;\n      if (item === list._evalWatchTail) list._evalWatchTail = prev;\n      if (prev !== null) prev._nextEvalWatch = next;\n      if (next !== null) next._prevEvalWatch = prev;\n    }\n  }\n}","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}