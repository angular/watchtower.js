{"version":3,"file":"change_detection.js","sources":["change_detection.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/16"],"names":[],"mappings":"AAeA;ACfI,CAAJ,EAAI,CAAA,YAAY,qBAAoB,CAAC;ACAjC,CAAJ,EAAI,sBFeG,SAAM,oBAAmB,KEfS,AFqBxC,CErBwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CHgB3B,MAAK,CAAL,UAAM,OAAO,CAAE,CAAA,KAAK,CAAE,CAAA,OAAO,CAAE;CAAE,QAAM,0BAAyB,CAAC;GAAE;CAEnE,OAAM,CAAN,UAAO,CAAE;CAAE,QAAM,2BAA0B,CAAC;GAAE;CAE9C,SAAQ,CAAR,UAAS,CAAE;CAAE,QAAM,6BAA4B,CAAC;GAAE;CAAA,KGpBkC;ADAlF,CAAJ,EAAI,iBFuBG,SAAM,eAAc;AIvB3B,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,0BAA2B,CAAE,UAAS,CAAC,CAAA;CFDd,AFyBxC,CEzBwC;AGArC,CAAJ,EAAI,iCAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,kBNwB3B,cAAc,CAAd,UAAe,gBAAgB,CAAE,CAAA,SAAS,CAAE;CAAE,QAAM,mCAAkC,CAAC;GAAE,MADvD,oBAAmB,CMtBE;AJDrD,CAAJ,EAAI,SF2BJ,SAAM,OAAM,KE3B6B,AFqCxC,CErCwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CH4B3B,IAAI,OAAM,EAAG;CAAE,QAAM,+BAA8B,CAAC;GAAE;CAEtD,IAAI,MAAK,EAAG;CAAE,QAAM,8BAA6B,CAAC;GAAE;CAAA,KG9BgC;ADAlF,CAAJ,EAAI,eFuCG,SAAM,aAAY;AIvCzB,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,wBAA2B,CAAE,UAAS,CAAC,CAAA;CFDd,AFyCxC,CEzCwC;AGArC,CAAJ,EAAI,6BAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,sBNuCK,OAAM,CMtCiB;AJDrD,CAAJ,EAAI,cF8CG,SAAM,YAAW;AI9CxB,CAAA,gBAAe,iBAAiB,CAAC,IAAI,CACrB,uBAA2B,CAAE,UAAS,CAAC,CAAA;CFDd,AFqDxC,CErDwC;AGArC,CAAJ,EAAI,2BAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CN+C3B,IAAI,OAAM,EAAG;CAAE,QAAM,+BAA8B,CAAC;GAAE;CACtD,IAAI,OAAM,CAAC,KAAK,CAAE;CAAE,QAAM,+BAA8B,CAAC;GAAE;CAE3D,MAAK,CAAL,UAAM,CAAE;CAAE,QAAM,0BAAyB,CAAC;GAAE;CAE5C,OAAM,CAAN,UAAO,CAAE;CAAE,QAAM,2BAA0B,CAAC;GAAE;CAAA,KANf,aAAY,CM7CY;AJDrD,CAAJ,EAAI,kBF0DG,SAAM,gBAAe,KE1Da,AF0ExC,CE1EwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CH2D3B,IAAI,IAAG,EAAG;CAAE,QAAM,4BAA2B,CAAC;GAAE;CAEhD,IAAI,QAAO,EAAG;CAAE,QAAM,gCAA+B,CAAC;GAAE;CAExD,IAAI,YAAW,EAAG;CAAE,QAAM,oCAAmC,CAAC;GAAE;CAEhE,IAAI,cAAa,EAAG;CAAE,QAAM,sCAAqC,CAAC;GAAE;CAEpE,IAAI,aAAY,EAAG;CAAE,QAAM,qCAAoC,CAAC;GAAE;CAElE,cAAa,CAAb,UAAc,EAAE,CAAE;CAAE,QAAM,kCAAiC,CAAC;GAAE;CAE9D,gBAAe,CAAf,UAAgB,EAAE,CAAE;CAAE,QAAM,oCAAmC,CAAC;GAAE;CAElE,eAAc,CAAd,UAAe,EAAE,CAAE;CAAE,QAAM,mCAAkC,CAAC;GAAE;CAAA,KGzEoB;ADAlF,CAAJ,EAAI,cF4EG,SAAM,YAAW,KE5EiB,AFoFxC,CEpFwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CH6E3B,IAAI,IAAG,EAAG;CAAE,QAAM,4BAA2B,CAAC;GAAE;CAChD,IAAI,cAAa,EAAG;CAAE,QAAM,sCAAqC,CAAC;GAAE;CACpE,IAAI,aAAY,EAAG;CAAE,QAAM,qCAAoC,CAAC;GAAE;CAClE,IAAI,aAAY,EAAG;CAAE,QAAM,qCAAoC,CAAC;GAAE;CAClE,IAAI,kBAAiB,EAAG;CAAE,QAAM,0CAAyC,CAAC;GAAE;CAC5E,IAAI,oBAAmB,EAAG;CAAE,QAAM,4CAA2C,CAAC;GAAE;CAChF,IAAI,oBAAmB,EAAG;CAAE,QAAM,4CAA2C,CAAC;GAAE;CAAA,KGnFI;ADAlF,CAAJ,EAAI,yBFsFG,SAAM,uBAAsB,KEtFM,AFsGxC,CEtGwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CHuF3B,IAAI,SAAQ,EAAG;CAAE,QAAM,iCAAgC,CAAC;GAAE;CAE1D,IAAI,eAAc,EAAG;CAAE,QAAM,uCAAsC,CAAC;GAAE;CAEtE,IAAI,cAAa,EAAG;CAAE,QAAM,sCAAqC,CAAC;GAAE;CAEpE,IAAI,UAAS,EAAG;CAAE,QAAM,kCAAiC,CAAC;GAAE;CAE5D,IAAI,aAAY,EAAG;CAAE,QAAM,qCAAoC,CAAC;GAAE;CAElE,gBAAe,CAAf,UAAgB,EAAE,CAAE;CAAE,QAAM,oCAAmC,CAAC;GAAE;CAElE,YAAW,CAAX,UAAY,EAAE,CAAE;CAAE,QAAM,gCAA+B,CAAC;GAAE;CAE1D,eAAc,CAAd,UAAe,EAAE,CAAE;CAAE,QAAM,mCAAkC,CAAC;GAAE;CAAA,KGrGoB;ADAlF,CAAJ,EAAI,uBFwGG,SAAM,qBAAoB,KExGQ,AFoHxC,CEpHwC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CH+G3B,IAAI,mBAAkB,EAAG;CAAE,QAAM,2CAA0C,CAAC;GAAE;CAE9E,IAAI,cAAa,EAAG;CAAE,QAAM,sCAAqC,CAAC;GAAE;CAEpE,IAAI,gBAAe,EAAG;CAAE,QAAM,wCAAuC,CAAC;GAAE;CAAA,KGnHY;AIAtF,CAAA,KAAM,QAAQ;CCAd,0BAAwB;CAAE,8BAAyB;GAAE;CAArD,qBAAwB;CAAE,yBAAyB;GAAE;CAArD,mBAAwB;CAAE,uBAAyB;GAAE;CAArD,kBAAwB;CAAE,sBAAyB;GAAE;CAArD,sBAAwB;CAAE,0BAAyB;GAAE;CAArD,kBAAwB;CAAE,sBAAyB;GAAE;CAArD,6BAAwB;CAAE,iCAAyB;GAAE;CAArD,2BAAwB;CAAE,+BAAyB;GAAE;ACArD,CAAA,WAAU,CAAE,KAAI;CAAA,AFAkB,CAAC;CPqHnC","sourcesContent":["/**\n * Stub implementations of the change detection API.\n * All of these throws can likely be removed at a later date, depending on the behaviour of the\n * Traceur compiler, and the changing ES6 spec.\n *\n * At the moment, Trait types are not being used as they are not in the current Harmony draft.\n * Unfortunately, this makes the composition of multiple classes, which is found in Angular.dart's\n * implementation, rather difficult. This will be improved upon in the future, however will quite\n * likely involve breaking changes.\n *\n * TODO:\n * Most of the getter/setter routines are unnecessary and likely cause performance hits. I'll\n * need to measure, but I don't think there is much benefit for these. For simplicity, some have\n * been commented out for the time being.\n */\nexport class ChangeDetectorGroup {\n  watch(context, field, handler) { throw \"watch() not implemented\"; }\n\n  remove() { throw \"remove() not implemented\"; }\n\n  newGroup() { throw \"newGroup() not implemented\"; }\n}\n\nexport class ChangeDetector extends ChangeDetectorGroup {\n  collectChanges(exceptionHandler, stopWatch) { throw \"collectChanges() not implemented\"; }\n}\n\nclass Record {\n  get object() { throw \"get object() not implemented\"; }\n\n  get field() { throw \"get field() not implemented\"; }\n\n  //get handler() { throw \"get handler() not implemented\"; }\n\n  //get currentValue() { throw \"get currentValue() not implemented\"; }\n\n  //get previousValue() { throw \"get previousValue() not implemented\"; }\n}\n\nexport class ChangeRecord extends Record {\n  //get nextChange() { throw \"get nextChange() not implemented\"; }\n}\n\n// I'm not sure that there is any area in the code in which a WatchRecord is used\n// where a ChangeRecord isn't --- But we don't have strong typing in JS, so we\n// can probably make this work regardless\nexport class WatchRecord extends ChangeRecord {\n  get object() { throw \"get object() not implemented\"; }\n  set object(value) { throw \"set object() not implemented\"; }\n\n  check() { throw \"check() not implemented\"; }\n\n  remove() { throw \"remove() not implemented\"; }\n}\n\n/**\n * TODO: refactor this, the crazy amount of types is not super helpful.\n */\nexport class MapChangeRecord {\n  get map() { throw \"get map() not implemented\"; }\n\n  get mapHead() { throw \"get mapHead() not implemented\"; }\n\n  get changesHead() { throw \"get changesHead() not implemented\"; }\n\n  get additionsHead() { throw \"get additionsHead() not implemented\"; }\n\n  get removalsHead() { throw \"get removalsHead() not implemented\"; }\n\n  forEachChange(fn) { throw \"forEachChange() not implemented\"; }\n\n  forEachAddition(fn) { throw \"forEachAddition() not implemented\"; }\n\n  forEachRemoval(fn) { throw \"forEachRemoval() not implemented\"; }\n}\n\nexport class MapKeyValue {\n  get key() { throw \"get key() not implemented\"; }\n  get previousValue() { throw \"get previousValue() not implemented\"; }\n  get currentValue() { throw \"get currentValue() not implemented\"; }\n  get nextKeyValue() { throw \"get nextKeyValue() not implemented\"; }\n  get nextAddedKeyValue() { throw \"get nextAddedKeyValue() not implemented\"; }\n  get nextRemovedKeyValue() { throw \"get nextRemovedKeyValue() not implemented\"; }\n  get nextChangedKeyValue() { throw \"get nextChangedKeyValue() not implemented\"; }\n}\n\nexport class CollectionChangeRecord {\n  get iterable() { throw \"get iterable() not implemented\"; }\n\n  get collectionHead() { throw \"get collectionHead() not implemented\"; }\n\n  get additionsHead() { throw \"get additionsHead() not implemented\"; }\n\n  get movesHead() { throw \"get movesHead() not implemented\"; }\n\n  get removalsHead() { throw \"get removalsHead() not implemented\"; }\n\n  forEachAddition(fn) { throw \"forEachAddition() not implemented\"; }\n\n  forEachMove(fn) { throw \"forEachMove() not implemented\"; }\n\n  forEachRemoval(fn) { throw \"forEachRemoval() not implemented\"; }\n}\n\nexport class CollectionChangeItem {\n  //get previousIndex() { throw \"get previousIndex() not implemented\"; }\n\n  //get currentIndex() { throw \"get currentIndex() not implemented\"; }\n\n  //get item() { throw \"get item() not implemented\"; }\n\n  get nextCollectionItem() { throw \"get nextCollectionItem() not implemented\"; }\n\n  get nextAddedItem() { throw \"get nextAddedItem() not implemented\"; }\n\n  get nextRemovedItem() { throw \"get nextRemovedItem() not implemented\"; }\n}\n","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}