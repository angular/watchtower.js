{"version":3,"file":"linked_list.js","sources":["linked_list.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/16"],"names":[],"mappings":"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","sourcesContent":["export class _LinkedListItem {\n  static _initialize(item) {\n    // TODO: Traceur assertions\n    // assert(typeof item._previous === \"undefined\");\n    // assert(typeof item._next === \"undefined\");\n    item._next = item._previous = null;\n  }\n}\n\nexport class _LinkedList {\n  static _initialize(list) {\n    // TODO: Traceur assertions\n    // assert(typeof list._head === \"undefined\");\n    // assert(typeof list._tail === \"undefined\");\n    list._tail = list._head = null;\n  }\n\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._next === null);\n    // assert(item._previous === null);\n    if (list._tail === null) {\n      list._head = list._tail = item;\n    } else {\n      item._previous = list._tail;\n      list._tail._next = item;\n      list._tail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._head === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._previous;\n    var next = item._next;\n\n    if (previous === null) list._head = next;\n    else previous._next = next;\n    if (next === null) list._tail = previous;\n    else next._previous = previous;\n  }\n}\n\nexport class _WatchList {\n  static _initialize(list) {\n    // TODO: Traceur assertions\n    // assert(typeof list._watchHead === \"undefined\");\n    // assert(typeof list._watchTail === \"undefined\");\n    list._watchHead = list._watchTail = null;\n  }\n\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._nextWatch === null);\n    // assert(item._previousWatch === null);\n    if (list._watchTail === null) {\n      list._watchHead = list._watchTail = item;\n    } else {\n      item._previousWatch = list._watchTail;\n      list._watchTail._nextWatch = item;\n      list._watchTail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._watchHead === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._previousWatch;\n    var next = item._nextWatch;\n    if (previous === null) list._watchHead = next;\n    else previous._nextWatch = next;\n    if (next === null) list._watchTail = previous;\n    else next._previousWatch = previous;\n  }\n}\n\nexport class _WatchGroupList {\n  static _add(list, item) {\n    // TODO(caitp): Traceur assertions\n    // assert(item._nextWatchGroup === null);\n    // assert(item._prevWatchGroup === null);\n    if (list._watchGroupTail === null) {\n      list._watchGroupHead = list._watchGroupTail = item;\n    } else {\n      item._prevWatchGroup = list._watchGroupTail;\n      list._watchGroupTail._nextWatchGroup = item;\n      list._watchGroupTail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._watchGroupHead === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._prevWatchGroup;\n    var next = item._nextWatchGroup;\n\n    if (previous === null) list._watchGroupHead = next;\n    else previous._nextWatchGroup = next;\n    if (next === null) list._watchGroupTail = previous;\n    else next._prevWatchGroup = previous;\n  }\n}\n\nexport class _ArgHandlerList {\n  static _initialize(list) {\n    list._argHandlerHead = list._argHandlerTail = null;\n  }\n\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._nextArgHandler === null);\n    // assert(item._previousArgHandler === null);\n    if (list._argHandlerTail === null) {\n      list._argHandlerHead = list._argHandlerTail = item;\n    } else {\n      item._previousArgHandler = list._argHandlerTail;\n      list._argHandlerTail._nextArgHandler = item;\n      list._argHandlerTail = item;\n    }\n    return item;\n  }\n\n  static _isEmpty(list) {\n    return list._argHandlerHead === null;\n  }\n\n  static _remove(list, item) {\n    var previous = item._previousArgHandler;\n    var next = item._nextArgHandler;\n\n    if (previous === null) list._argHandlerHead = next;\n    else previous._nextArgHandler = next;\n    if (next === null) list._argHandlerTail = previous;\n    else next._previousArgHandler = previous;\n  }\n}\n\nexport class _EvalWatchList {\n  static _add(list, item) {\n    // TODO: Traceur assertions\n    // assert(item._nextEvalWatch === null);\n    // assert(item._prevEvalWatch === null);\n    var prev = list._evalWatchTail;\n    var next = prev._nextEvalWatch;\n\n    if (prev === list._marker) {\n      list._evalWatchHead = list._evalWatchTail = item;\n      prev = prev._prevEvalWatch;\n      list._marker._prevEvalWatch = null;\n      list._marker._nextEvalWatch = null;\n    }\n    item._nextEvalWatch = next;\n    item._prevEvalWatch = prev;\n\n    if (prev !== null) prev._nextEvalWatch = item;\n    if (next !== null) next._prevEvalWatch = item;\n\n    return (list._evalWatchTail = item);\n  }\n\n  static _isEmpty(list) {\n    return list._evalWatchHead === null;\n  }\n\n  static _remove(list, item) {\n    // TODO: Traceur assertions\n    // assert(item.watchGrp === list);\n    var prev = item._prevEvalWatch;\n    var next = item._nextEvalWatch;\n\n    if (list._evalWatchHead === list._evalWatchTail) {\n      list._evalWatchHead = list._evalWatchTail = list._marker;\n      list._marker._nextEvalWatch = next;\n      list._marker._prevEvalWatch = prev;\n      if (prev !== null) prev._nextEvalWatch = list._marker;\n      if (next !== null) next._prevEvalWatch = list._marker;\n    } else {\n      if (item === list._evalWatchHead) list._evalWatchHead = next;\n      if (item === list._evalWatchTail) list._evalWatchTail = prev;\n      if (prev !== null) prev._nextEvalWatch = next;\n      if (next !== null) next._prevEvalWatch = prev;\n    }\n  }\n}","var __moduleName = $__placeholder__0;","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}