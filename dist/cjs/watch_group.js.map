{"version":3,"file":"watch_group.js","sources":["watch_group.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/16"],"names":[],"mappings":"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","sourcesContent":["import {\n  AST\n} from './ast';\n\nimport {\n  WatchRecord\n} from './change_detection';\n\nimport {\n  _LinkedList,\n  _LinkedListItem,\n  _WatchList,\n  _WatchGroupList,\n  _ArgHandlerList,\n  _EvalWatchList\n} from './linked_list';\n\nimport {\n  _Handler,\n  _ConstantHandler,\n  _CollectionHandler,\n  _InvokeHandler,\n  _FieldHandler,\n  _ArgHandler,\n  _EvalWatchRecord\n} from './watch_record';\n\nfunction putIfAbsent(obj, key, ctor) {\n  if (key in obj) return obj[key];\n  return (obj[key] = ctor());\n}\n\nexport class WatchGroup {\n  constructor(parentWatchGroup, changeDetector, context, cache, rootGroup) {\n    // TODO: Traceur Assertions\n    // assert(parentWatchGroup is WatchGroup)\n    // assert(changeDetector is ChangeDetector)\n    // assert(context and context is Function or Object)\n    // assert(rootGroup is RootWatchGroup)\n    this._parentWatchGroup = parentWatchGroup;\n    // Initialize _WatchGroupList\n    this._watchGroupHead = this._watchGroupTail = null;\n    this._nextWatchGroup = this._prevWatchGroup = null;\n    this.id = parentWatchGroup.id + '.' + parentWatchGroup._nextChildId++;\n    this._changeDetector = changeDetector;\n    this.context = context;\n    this._cache = cache;\n    this._rootGroup = rootGroup;\n    this._nextChildId = 0;\n\n    this._marker = _EvalWatchRecord.marker();\n    this._marker.watchGrp = this;\n    this._evalWatchHead = this._evalWatchTail = this._marker;\n\n    // Stats...\n    this._fieldCost = 0;\n    this._collectionCost = 0;\n    this._evalCost = 0;\n  }\n\n  // Stats: Number of field watchers which are in use\n  get fieldCost() {\n    return this._fieldCost;\n  }\n\n  // Stats: Number of field watchers which are in use including child groups\n  get totalFieldCost() {\n    var cost = this._fieldCost;\n    var group = this._watchGroupHead;\n    while (group !== null) {\n      cost += group.totalFieldCost;\n      group = group._nextWatchGroup;\n    }\n    return cost;\n  }\n\n  // Stats: Number of collection watchers which are in use\n  get collectionCost() {\n    return this._collectionCost;\n  }\n\n  // Stats: Number of collection watchers which are in use including child groups\n  get totalCollectionCost() {\n    var cost = this._collectionCost;\n    var group = this._watchGroupHead;\n    while (group !== null) {\n      cost += group.totalCollectionCost;\n      group = group._nextWatchGroup;\n    }\n    return cost;\n  }\n\n  // Stats: Number of invocation watchers (closures/methods) which are in use\n  get evalCost() {\n    return this._evalCost;\n  }\n\n  // Stats: Number of invocation watchers (closures/methods) which are in use, including child\n  // groups\n  get totalEvalCost() {\n    var cost = this._evalCost;\n    var group = this._watchGroupHead;\n    while (group !== null) {\n      cost += group.totalEvalCost;\n      group = group._nextWatchGroup;\n    }\n    return cost;\n  }\n\n  get isAttached() {\n    var group = this;\n    var root = this._rootGroup;\n    while (group !== null) {\n      if (group === root) {\n        return true;\n      }\n      group = group._parentWatchGroup;\n    }\n    return false;\n  }\n\n  // TODO:\n  // I am not at all sure about the `expression` abstraction. In Angular.dart, this is a parse tree\n  // or AST, and is tied rather closely to the core Parser implementation.\n  //\n  // In my mind, this library should be useful independent from the core Angular parser, but I am\n  // not sure how to accomplish this elegantly. It seems that regardless of how this is structured,\n  // there is going to be some overhead in converting to a parse tree understood by the\n  // dirty-checker.\n  //\n  // If anyone has any clever suggestions regarding this, please file an issue so that we can\n  // bike-shed this.\n  watch(expression, reactionFn) {\n    var watchRecord;\n    if (expression.expression in this._cache) {\n      watchRecord = this._cache[expression.expression];\n    } else {\n      this._cache[expression.expression] = watchRecord = expression.setupWatch(this);\n    }\n    return watchRecord.handler.addReactionFn(reactionFn);\n  }\n\n  get _childWatchGroupTail() {\n    var tail = this, nextTail;\n    while ((nextTail = tail._watchGroupTail) !== null) tail = nextTail;\n    return tail;\n  }\n\n  // Create a new child [WatchGroup]\n  //\n  // - [context] if present the child [WatchGroup] expressions will evaluate against the new\n  // [context]. If not present than child expressions will evaluate on same context allowing\n  // the reuse of the expression cache.\n  newGroup(context) {\n    var prev = this._childWatchGroupTail._evalWatchTail;\n    var next = prev._nextEvalWatch;\n\n    if (arguments.length === 0 || context === null) context = this.context;\n    var root = this._rootGroup === null ? this : this._rootGroup;\n    var cache = context === null ? this._cache : {};\n\n    var childGroup = new WatchGroup(this, this._changeDetector.newGroup(), context, cache, root);\n    _WatchGroupList._add(this, childGroup);\n\n    var marker = childGroup._marker;\n\n    marker._prevEvalWatch = prev;\n    marker._nextEvalWatch = next;\n    if (prev !== null) prev._nextEvalWatch = marker;\n    if (next !== null) next._prevEvalWatch = marker;\n\n    return childGroup;\n  }\n\n  // Remove/destroy [WatchGroup] and all of its watches\n  remove() {\n    // TODO:(misko) This code is not right.\n    // 1) It fails to release [ChangeDetector] [WatchRecord]s\n\n    _WatchGroupList._remove(this._parentWatchGroup, this);\n    this._nextWatchGroup = this._prevWatchGroup = null;\n    this._changeDetector.remove();\n    this._rootGroup._removeCount++;\n    this._parentWatchGroup = null;\n\n    // Unlink the _watchRecord\n    var firstEvalWatch = this._evalWatchHead;\n    var lastEvalWatch = (this._watchGroupTail === null\n                      ? this : this._watchGroupTail)._evalWatchTail;\n    var prev = firstEvalWatch._prevEvalWatch;\n    var next = lastEvalWatch._nextEvalWatch;\n    if (prev !== null) prev._nextEvalWatch = next;\n    if (next !== null) next._prevEvalWatch = prev;\n    this._evalWatchHead._prevEvalWatch = null;\n    this._evalWatchTail._nextEvalWatch = null;\n    this._evalWatchHead = this._evalWatchTail = null;\n  }\n\n  toString() {\n    var lines = [], watch;\n    if (this === this._rootGroup) {\n      var allWatches = [];\n      watch = this._evalWatchHead;\n      var prev = null;\n      while (watch !== null) {\n        allWatches.push(watch.toString());\n        // TODO: Traceur assertions\n        // assert(watch._prevEvalWatch === prev);\n        prev = watch;\n        watch = watch._nextEvalWatch;\n      }\n      lines.push('WATCHES: ' + allWatches.join(', '));\n    }\n\n    var watches = [];\n    watch = this._evalWatchHead;\n    while (watch !== this._evalWatchTail) {\n      watches.push(watch.toString());\n      watch = watch._nextEvalWatch;\n    }\n    watches.push(watch.toString());\n\n    lines.push('WatchGroup[' + this.id + '](watches: ' + watches.join(', ') + ')');\n    var childGroup = this._watchGroupHead;\n    while (childGroup !== null) {\n      lines.push('  ' + childGroup.toString().split('\\n').join('\\n  '));\n      childGroup = childGroup._nextWatchGroup;\n    }\n    return lines.join(\"\\n\");\n  }\n\n  //\n  // Watch a name field on lhs represented by expression\n  addFieldWatch(lhs, name, expression) {\n    var that = this;\n    var fieldHandler = new _FieldHandler(this, expression);\n\n    // Create a ChangeRecord for the current field and assign the change record to the handler.\n    var watchRecord = this._changeDetector.watch(null, name, fieldHandler);\n    this._fieldCost++;\n    fieldHandler.watchRecord = watchRecord;\n\n    var lhsWR = putIfAbsent(this._cache, lhs.expression, function() {\n      return lhs.setupWatch(that);\n    });\n\n    // We set a field forwarding handler on LHS. This will allow the change objects to propagate to\n    // the current WatchRecord.\n    lhsWR.handler.addForwardHandler(fieldHandler);\n\n    // propagate the value from the LHS to here\n    fieldHandler.acceptValue(lhsWR.currentValue);\n    return watchRecord;\n  }\n\n  addCollectionWatch(ast) {\n    var that = this;\n    var collectionHandler = new _CollectionHandler(this, ast.expression);\n    var watchRecord = this._changeDetector.watch(null, null, collectionHandler);\n    this._collectionCost++;\n    collectionHandler.watchRecord = watchRecord;\n\n    // We set a field forwarding handler on LHS. This will allow the change objects to propagate to\n    // the current WatchRecord.\n    var astWR = putIfAbsent(this._cache, ast.expression, function() {\n      return ast.setupWatch(that);\n    });\n\n    // propagate the value from the LHS to here\n    collectionHandler.acceptValue(astWR.currentValue);\n\n    return watchRecord;\n  }\n\n  addFunctionWatch(fn, argsAST, expression) {\n    return this._addEvalWatch(null, fn, null, argsAST, expression);\n  }\n\n  addMethodWatch(lhs, name, argsAST, expression) {\n    return this._addEvalWatch(lhs, null, name, argsAST, expression);\n  }\n\n  _addEvalWatch(lhsAST, fn, name, argsAST, expression) {\n    var that = this;\n    var invokeHandler = new _InvokeHandler(this, expression);\n    var evalWatchRecord = new _EvalWatchRecord(this, invokeHandler, fn, name, argsAST.length);\n    invokeHandler.watchRecord = evalWatchRecord;\n\n    if (lhsAST !== null) {\n      var lhsWR = putIfAbsent(this._cache, lhsAST.expression, function() {\n        return lhsAST.setupWatch(that);\n      });\n      lhsWR.handler.addForwardHandler(invokeHandler);\n      invokeHandler.acceptValue(lhsWR.currentValue);\n    }\n\n    // Convert the args from AST to WatchRecords\n    var i = 0;\n    argsAST.map(function(ast) {\n      return ast.setupWatch(that);\n    }).forEach(function(record) {\n      var argHandler = new _ArgHandler(this, evalWatchRecord, i++);\n      _ArgHandlerList._add(invokeHandler, argHandler);\n      record.handler.addForwardHandler(argHandler);\n      argHandler.acceptValue(record.currentValue);\n    });\n\n    // Must be done last\n    _EvalWatchList._add(this, evalWatchRecord);\n    this._evalCost++;\n\n    if (this._rootGroup.isInsideInvokeDirty) {\n      // This check means that we are inside invoke reaction function.\n      // Registering a new EvalWatch at this point will not run the\n      // .check() on it which means it will not be processed, but its\n      // reaction function will be run with null. So we process it manually.\n      evalWatchRecord.check();\n    }\n\n    return evalWatchRecord;\n  }\n}\n\nexport class RootWatchGroup extends WatchGroup {\n  constructor(changeDetector, context) {\n    // TODO: Traceur Assertions\n    // assert(changeDetector is ChangeDetector)\n    // assert(context and context is Function or Object)\n    this._changeDetector = changeDetector;\n    this.context = context;\n    this._cache = {};\n\n    this._parentWatchGroup = null;\n    // Initialize _WatchGroupList\n    this._watchGroupTail = this._watchGroupHead = null;\n\n    this.id = '';\n    this._nextChildId = 0;\n\n    // TODO: When _EvalWatchRecord is implemented...\n    this._marker = _EvalWatchRecord.marker();\n    this._marker.watchGrp = this;\n    this._evalWatchHead = this._evalWatchTail = this._marker;\n    this._dirtyWatchHead = this._dirtyWatchTail = null;\n\n    // Stats...\n    this._fieldCost = 0;\n    this._collectionCost = 0;\n    this._evalCost = 0;\n  }\n\n  get _rootGroup() {\n    return this;\n  }\n\n  // Detect changes and process the [ReactionFn]s\n  //\n  // Algorithm:\n  // 1) process the [ChangeDetector#collectChanges]\n  // 2) process function/closure/method changes\n  // 3) call an [ReactionFn]s\n  //\n  // Each step is called in sequence. ([ReactionFn]s are not called until all previous steps are\n  // completed).\n  detectChanges(exceptionHandler, changeLog, fieldStopWatch, evalStopWatch, processStopWatch) {\n    // 1) Process the ChangeRecords from the change detector\n    var changeDetector = this._changeDetector;\n    var changeRecordIterator = changeDetector.collectChanges(exceptionHandler, fieldStopWatch);\n    if (processStopWatch) processStopWatch.start();\n    while (changeRecordIterator.iterate()) {\n      var record = changeRecordIterator.current;\n      if (changeLog)\n        changeLog(record.handler.expression,\n                  record.currentValue,\n                  record.previousValue);\n      record.handler.onChange(record);\n    }\n    if (processStopWatch) processStopWatch.stop();\n\n    // 2) Process function evaluations\n    var evalRecord = this._evalWatchHead;\n    var evalCount = 0;\n    while (evalRecord !== null) {\n      try {\n        ++evalCount;\n        if (evalRecord.check() && changeLog)\n          changeLog(evalRecord.handler.expression,\n                    evalRecord.currentValue,\n                    evalRecord.previousValue);\n      } catch (e) {\n        if (exceptionHandler) exceptionHandler(e);\n        else throw e;\n      }\n      evalRecord = evalRecord._nextEvalWatch;\n    }\n    if (evalStopWatch) {\n      evalStopWatch.stop();\n      evalStopWatch.increment(evalCount);\n    }\n\n    if (processStopWatch) processStopWatch.stop();\n\n    // Because the handler can forward changes between each other synchronously, we need to call\n    // reaction functions asynchronously. This processes the asynchronous reaction function queue.\n    var count = 0;\n    var dirtyWatch = this._dirtyWatchHead;\n    this._dirtyWatchHead = null;\n    var root = this._rootGroup;\n    root._removeCount = 0;\n\n    try {\n      while (dirtyWatch !== null) {\n        count++;\n        try {\n          if (root._removeCount === 0 || dirtyWatch._watchGroup.isAttached) {\n            dirtyWatch.invoke();\n          }\n        } catch (e) {\n          if (exceptionHandler) exceptionHandler(e);\n          else throw e;\n        }\n        var nextDirtyWatch = dirtyWatch._nextDirtyWatch;\n        dirtyWatch._nextDirtyWatch = null;\n        dirtyWatch = nextDirtyWatch;\n      }\n    } finally {\n      this._dirtyWatchTail = null;\n    }\n\n    if (processStopWatch) {\n      processStopWatch.stop();\n      processStopWatch.increment(count);\n    }\n    return count;\n  }\n\n  get isInsideInvokeDirty() {\n    return this._dirtyWatchHead === null && this._dirtyWatchTail !== null;\n  }\n\n  _addDirtyWatch(watch) {\n    if (!watch._dirty) {\n      watch._dirty = true;\n      if (this._dirtyWatchTail === null) {\n        this._dirtyWatchHead = this._dirtyWatchTail = watch;\n      } else {\n        this._dirtyWatchTail._nextDirtyWatch = watch;\n        this._dirtyWatchTail = watch;\n      }\n      watch._nextDirtyWatch = null;\n    }\n    return watch;\n  }\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}